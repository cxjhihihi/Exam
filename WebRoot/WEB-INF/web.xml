<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" 
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
  
  <display-name>Exam</display-name>
  
  <!-- 首页列表 -->
  <welcome-file-list>
    <welcome-file>login.jsp</welcome-file>
  </welcome-file-list>
  
  <!-- 设置spring容器加载配置文件的路径 -->
  <context-param>
  	<param-name>contextConfigLocation</param-name>
  	<param-value>classpath:config/spring/spring-config.xml</param-value>
  </context-param>
  
  <!-- 加载spring监听器 -->
  <listener>
  	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  
  <!-- 加载log4j配置 -->
  <context-param>
  	<param-name>log4jConfigLocation</param-name>
  	<param-value>classpath:config/log4j/log4j.properties</param-value>
  </context-param>
  
  <!-- 设置容器每60s扫描一次log4j的配置文件 -->
  <context-param>
  	<param-name>log4jRefreshIntervel</param-name>
 	<param-value>60000</param-value>
  </context-param>
  
  <!-- 加载log4j监听器 -->
  <listener>
  	<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
  </listener>
  
  <!-- 配置全局过滤器 -->
  <filter>
  	<filter-name>filter</filter-name>
  	<filter-class>com.wsbm.util.SessionFilter</filter-class>
  </filter>
  <filter-mapping>
  	<filter-name>filter</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <!-- 拦截请求并使用springMVC的DispatcherServlet控制流程 -->
  <servlet>
  	<servlet-name>springMVC</servlet-name>
  	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  	<!-- 
  		默认情况下，DispatcherServlet会加载WEB-INF下的配置文件，
  		配置文件名称默认为servlet-name的名字+servlet.xml即springMVC-servlet.xml
  		可通过init-param修改加载文件的名字和路径
  	 -->
  	 <init-param>
  	 	<param-name>contextConfigLocation</param-name>
  	 	<!-- classpath是指WEB-INF文件夹下的classes文件夹 -->
  	 	<param-value>classpath:config/spring/springMVC-servlet.xml</param-value>
  	 </init-param>
  	 <!-- 加载顺序 -->
  	 <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
  	<servlet-name>springMVC</servlet-name>
  	<!-- 
  	url-pattern拦截/而不是/*，
  		原因：如果使用/*，那么请求时可以通过DispatcherServlet转发到相应的Action或者Controller中，
  		但是返回的内容，如返回一个jsp还会被再次拦截，这样导致404错误
  	-->
  	<url-pattern>/</url-pattern>
  </servlet-mapping>
  
  <!-- 字符集过滤器：UTF-8 -->
  <filter>
  	<filter-name>encodingFilter</filter-name>
  	<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
  	<init-param>
  		<param-name>encoding</param-name>
  		<param-value>UTF-8</param-value>
  	</init-param>
  	<init-param>
  		<!-- forceEncoding设置为true时，则在代码中设置的编码格式没用 -->
  		<param-name>forceEncoding</param-name>
  		<param-value>true</param-value>
  	</init-param>
  </filter>
  <filter-mapping>
  	<filter-name>encodingFilter</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <!-- 404错误处理 -->
  <error-page>
  	<error-code>404</error-code>
  	<location>/jsp/public/error404.jsp</location>
  </error-page>
  
  <!-- 500错误处理 -->
  <error-page>
  	<error-code>500</error-code>
  	<location>/jsp/public/error500.jsp</location>
  </error-page>
  
  <!-- 设置session过期时间：5分钟 -->
  <session-config>
  	<session-timeout>5</session-timeout>
  </session-config>
</web-app>
